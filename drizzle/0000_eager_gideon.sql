-- File: drizzle/0000_eager_gideon.sql

CREATE TABLE "hexmusic-stream_account" (
	"userId" varchar(255) NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"providerAccountId" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "hexmusic-stream_account_provider_providerAccountId_pk" PRIMARY KEY("provider","providerAccountId")
);
--> statement-breakpoint
CREATE TABLE "hexmusic-stream_favorite" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "hexmusic-stream_favorite_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"userId" varchar(255) NOT NULL,
	"trackId" integer NOT NULL,
	"trackData" jsonb NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hexmusic-stream_listening_history" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "hexmusic-stream_listening_history_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"userId" varchar(255) NOT NULL,
	"trackId" integer NOT NULL,
	"trackData" jsonb NOT NULL,
	"playedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"duration" integer
);
--> statement-breakpoint
CREATE TABLE "hexmusic-stream_playlist_track" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "hexmusic-stream_playlist_track_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"playlistId" integer NOT NULL,
	"trackId" integer NOT NULL,
	"trackData" jsonb NOT NULL,
	"position" integer NOT NULL,
	"addedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hexmusic-stream_playlist" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "hexmusic-stream_playlist_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"userId" varchar(255) NOT NULL,
	"name" varchar(256) NOT NULL,
	"description" text,
	"coverImage" varchar(512),
	"isPublic" boolean DEFAULT false NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "hexmusic-stream_post" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "hexmusic-stream_post_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"name" varchar(256),
	"createdById" varchar(255) NOT NULL,
	"createdAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updatedAt" timestamp with time zone
);
--> statement-breakpoint
CREATE TABLE "hexmusic-stream_search_history" (
	"id" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "hexmusic-stream_search_history_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"userId" varchar(255) NOT NULL,
	"query" varchar(512) NOT NULL,
	"searchedAt" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hexmusic-stream_session" (
	"sessionToken" varchar(255) PRIMARY KEY NOT NULL,
	"userId" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE "hexmusic-stream_user" (
	"id" varchar(255) PRIMARY KEY NOT NULL,
	"name" varchar(255),
	"email" varchar(255) NOT NULL,
	"emailVerified" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"image" varchar(255)
);
--> statement-breakpoint
CREATE TABLE "hexmusic-stream_verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "hexmusic-stream_verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);
--> statement-breakpoint
ALTER TABLE "hexmusic-stream_account" ADD CONSTRAINT "hexmusic-stream_account_userId_hexmusic-stream_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."hexmusic-stream_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hexmusic-stream_favorite" ADD CONSTRAINT "hexmusic-stream_favorite_userId_hexmusic-stream_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."hexmusic-stream_user"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hexmusic-stream_listening_history" ADD CONSTRAINT "hexmusic-stream_listening_history_userId_hexmusic-stream_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."hexmusic-stream_user"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hexmusic-stream_playlist_track" ADD CONSTRAINT "hexmusic-stream_playlist_track_playlistId_hexmusic-stream_playlist_id_fk" FOREIGN KEY ("playlistId") REFERENCES "public"."hexmusic-stream_playlist"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hexmusic-stream_playlist" ADD CONSTRAINT "hexmusic-stream_playlist_userId_hexmusic-stream_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."hexmusic-stream_user"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hexmusic-stream_post" ADD CONSTRAINT "hexmusic-stream_post_createdById_hexmusic-stream_user_id_fk" FOREIGN KEY ("createdById") REFERENCES "public"."hexmusic-stream_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hexmusic-stream_search_history" ADD CONSTRAINT "hexmusic-stream_search_history_userId_hexmusic-stream_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."hexmusic-stream_user"("id") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "hexmusic-stream_session" ADD CONSTRAINT "hexmusic-stream_session_userId_hexmusic-stream_user_id_fk" FOREIGN KEY ("userId") REFERENCES "public"."hexmusic-stream_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "account_user_id_idx" ON "hexmusic-stream_account" USING btree ("userId");--> statement-breakpoint
CREATE INDEX "favorite_user_idx" ON "hexmusic-stream_favorite" USING btree ("userId");--> statement-breakpoint
CREATE INDEX "favorite_track_idx" ON "hexmusic-stream_favorite" USING btree ("trackId");--> statement-breakpoint
CREATE INDEX "favorite_user_track_idx" ON "hexmusic-stream_favorite" USING btree ("userId","trackId");--> statement-breakpoint
CREATE INDEX "history_user_idx" ON "hexmusic-stream_listening_history" USING btree ("userId");--> statement-breakpoint
CREATE INDEX "history_played_idx" ON "hexmusic-stream_listening_history" USING btree ("playedAt");--> statement-breakpoint
CREATE INDEX "history_user_played_idx" ON "hexmusic-stream_listening_history" USING btree ("userId","playedAt");--> statement-breakpoint
CREATE INDEX "playlist_track_playlist_idx" ON "hexmusic-stream_playlist_track" USING btree ("playlistId");--> statement-breakpoint
CREATE INDEX "playlist_track_position_idx" ON "hexmusic-stream_playlist_track" USING btree ("playlistId","position");--> statement-breakpoint
CREATE INDEX "playlist_user_idx" ON "hexmusic-stream_playlist" USING btree ("userId");--> statement-breakpoint
CREATE INDEX "playlist_created_idx" ON "hexmusic-stream_playlist" USING btree ("createdAt");--> statement-breakpoint
CREATE INDEX "created_by_idx" ON "hexmusic-stream_post" USING btree ("createdById");--> statement-breakpoint
CREATE INDEX "name_idx" ON "hexmusic-stream_post" USING btree ("name");--> statement-breakpoint
CREATE INDEX "search_user_idx" ON "hexmusic-stream_search_history" USING btree ("userId");--> statement-breakpoint
CREATE INDEX "search_query_idx" ON "hexmusic-stream_search_history" USING btree ("query");--> statement-breakpoint
CREATE INDEX "t_user_id_idx" ON "hexmusic-stream_session" USING btree ("userId");
